// <auto-generated />
using System;
using Bintangku.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bintangku.WebApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    [Migration("20210411183632_RefactorDataBase2")]
    partial class RefactorDataBase2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.BirthHistory", b =>
                {
                    b.Property<int>("BirthHistoryId")
                        .HasColumnType("integer");

                    b.Property<int>("ApgarScore")
                        .HasColumnType("integer");

                    b.Property<string>("BirthAssistedBy")
                        .HasColumnType("text");

                    b.Property<int>("ChildDataId")
                        .HasColumnType("integer");

                    b.Property<string>("Etc")
                        .HasColumnType("text");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<byte>("Weight")
                        .HasColumnType("smallint");

                    b.HasKey("BirthHistoryId");

                    b.ToTable("BirthHistory");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ChildData", b =>
                {
                    b.Property<int>("ChildDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Kontak")
                        .HasColumnType("text");

                    b.Property<int>("NIK")
                        .HasColumnType("integer");

                    b.Property<int>("NakesUserId")
                        .HasColumnType("integer");

                    b.Property<byte>("NumberOfSiblings")
                        .HasColumnType("smallint");

                    b.HasKey("ChildDataId");

                    b.HasIndex("NakesUserId");

                    b.ToTable("ChildDatas");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ChildHealth", b =>
                {
                    b.Property<int>("ChildHealthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildDataId")
                        .HasColumnType("integer");

                    b.Property<int>("PemeriksaanBeratBadan")
                        .HasColumnType("integer");

                    b.Property<int>("PemeriksaanTinggiBadan")
                        .HasColumnType("integer");

                    b.HasKey("ChildHealthId");

                    b.HasIndex("ChildDataId")
                        .IsUnique();

                    b.ToTable("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.GpphCheckup", b =>
                {
                    b.Property<int>("GpphCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<byte>("Point")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question1")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question10")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question2")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question3")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question4")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question5")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question6")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question7")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question8")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question9")
                        .HasColumnType("smallint");

                    b.HasKey("GpphCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("GpphCheckup");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HeadCircumferenceCheckup", b =>
                {
                    b.Property<int>("HeadCircumferenceCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<string>("Classification")
                        .HasColumnType("text");

                    b.Property<int>("Curve")
                        .HasColumnType("integer");

                    b.Property<int>("HeadCircumference")
                        .HasColumnType("integer");

                    b.HasKey("HeadCircumferenceCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("HeadCircumferenceCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HearingPowerCheckup", b =>
                {
                    b.Property<int>("HearingPowerCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.HasKey("HearingPowerCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("HearingPowerCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HearingPowerDetail", b =>
                {
                    b.Property<int>("HearingPowerDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("HearingPowerCheckupId")
                        .HasColumnType("integer");

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<int>("TotalYes")
                        .HasColumnType("integer");

                    b.HasKey("HearingPowerDetailId");

                    b.HasIndex("HearingPowerCheckupId");

                    b.ToTable("HearingPowerDetails");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KmpeCheckup", b =>
                {
                    b.Property<int>("KmpeCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<bool>("Question1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question10")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question11")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question12")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question13")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question14")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question3")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question4")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question5")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question6")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question7")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question8")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question9")
                        .HasColumnType("boolean");

                    b.Property<byte>("TotalYes")
                        .HasColumnType("smallint");

                    b.HasKey("KmpeCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("KmpeCheckup");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KpspCheckup", b =>
                {
                    b.Property<int>("KpspCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.HasKey("KpspCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("KpspCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KpspDetail", b =>
                {
                    b.Property<int>("KpspDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("BicaraDanBahasa")
                        .HasColumnType("integer");

                    b.Property<int>("GerakHalus")
                        .HasColumnType("integer");

                    b.Property<int>("GerakKasar")
                        .HasColumnType("integer");

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<int>("JumlahYa")
                        .HasColumnType("integer");

                    b.Property<int>("KpspCheckupId")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<int>("SosialisasiDanKemandirian")
                        .HasColumnType("integer");

                    b.Property<string>("Tindakan")
                        .HasColumnType("text");

                    b.HasKey("KpspDetailId");

                    b.HasIndex("KpspCheckupId");

                    b.ToTable("KpspDetails");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.MchatCheckup", b =>
                {
                    b.Property<int>("MchatCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<bool>("Question1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question10")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question11")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question12")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question13")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question14")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question15")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question16")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question17")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question18")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question19")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question20")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question21")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question22")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question23")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question3")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question4")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question5")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question6")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question7")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question8")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question9")
                        .HasColumnType("boolean");

                    b.Property<int>("TotalCriticalQuestionNo")
                        .HasColumnType("integer");

                    b.Property<int>("TotalCriticalQuestionYes")
                        .HasColumnType("integer");

                    b.Property<int>("TotalQuestionNo")
                        .HasColumnType("integer");

                    b.Property<int>("TotalQuestionYes")
                        .HasColumnType("integer");

                    b.HasKey("MchatCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("M-ChatCheckup");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NakesUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("NoStrTenagaKesehatan")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("TempatPelayanan")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NutritionalStatusBbTbCheckup", b =>
                {
                    b.Property<int>("NutritionalStatusBbTbCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("NutritionalStatus")
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.Property<int>("ZCode")
                        .HasColumnType("integer");

                    b.HasKey("NutritionalStatusBbTbCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("NutritionalStatusBbTbCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NutritionalStatusImtUCheckup", b =>
                {
                    b.Property<int>("NutritionalStatusImtUCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("IMT")
                        .HasColumnType("integer");

                    b.Property<string>("NutritionalStatus")
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.Property<int>("ZCode")
                        .HasColumnType("integer");

                    b.HasKey("NutritionalStatusImtUCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("NutritionalStatusImtUCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NutritionalStatusIpTbCheckup", b =>
                {
                    b.Property<int>("NutritionalStatusIpTbCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("IndexLength")
                        .HasColumnType("integer");

                    b.Property<string>("NutritionalStatus")
                        .HasColumnType("text");

                    b.Property<int>("ZCode")
                        .HasColumnType("integer");

                    b.HasKey("NutritionalStatusIpTbCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("NutritionalStatusIpTbCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ParentHistory", b =>
                {
                    b.Property<int>("ParentHistoryId")
                        .HasColumnType("integer");

                    b.Property<int>("ChildDataId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FatherDateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FatherJob")
                        .HasColumnType("text");

                    b.Property<string>("FatherName")
                        .HasColumnType("text");

                    b.Property<byte>("HouseholdMember")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("MotherDateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MotherJob")
                        .HasColumnType("text");

                    b.Property<string>("MotherName")
                        .HasColumnType("text");

                    b.Property<float>("ParentIncome")
                        .HasColumnType("real");

                    b.Property<string>("SignaturePath")
                        .HasColumnType("text");

                    b.HasKey("ParentHistoryId");

                    b.ToTable("ParentHistory");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.Property<int>("NakesUserId")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NakesUserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.VisionCheckup", b =>
                {
                    b.Property<int>("VisionCheckupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ChildHealthId")
                        .HasColumnType("integer");

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<int>("LeftEye")
                        .HasColumnType("integer");

                    b.Property<int>("RightEye")
                        .HasColumnType("integer");

                    b.HasKey("VisionCheckupId");

                    b.HasIndex("ChildHealthId");

                    b.ToTable("VisionCheckups");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppUserRole", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.BirthHistory", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildData", "ChildData")
                        .WithOne("BirthHistory")
                        .HasForeignKey("Bintangku.WebApi.Data.Entities.BirthHistory", "BirthHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildData");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ChildData", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", "NakesUser")
                        .WithMany("DataAnaks")
                        .HasForeignKey("NakesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NakesUser");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ChildHealth", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildData", "ChildData")
                        .WithOne("ChildHealth")
                        .HasForeignKey("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildData");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.GpphCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("GpphCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HeadCircumferenceCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("HeadCircumferenceCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HearingPowerCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("hearingPowerCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HearingPowerDetail", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.HearingPowerCheckup", "HearingPowerCheckup")
                        .WithMany("HearingPowerDetails")
                        .HasForeignKey("HearingPowerCheckupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HearingPowerCheckup");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KmpeCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("KmpeCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KpspCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("KpspCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KpspDetail", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KpspCheckup", "KpspCheckup")
                        .WithMany("KpspDetails")
                        .HasForeignKey("KpspCheckupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KpspCheckup");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.MchatCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("MchatCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NutritionalStatusBbTbCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("NutritionalStatusBbTbCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NutritionalStatusImtUCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("NutritionalStatusImtUCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NutritionalStatusIpTbCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("NutritionalStatusIpTbCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ParentHistory", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildData", "ChildData")
                        .WithOne("ParentHistory")
                        .HasForeignKey("Bintangku.WebApi.Data.Entities.ParentHistory", "ParentHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildData");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.Photo", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", "NakesUser")
                        .WithMany("Photos")
                        .HasForeignKey("NakesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NakesUser");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.VisionCheckup", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.ChildHealth", "ChildHealth")
                        .WithMany("VisionCheckups")
                        .HasForeignKey("ChildHealthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildHealth");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ChildData", b =>
                {
                    b.Navigation("BirthHistory");

                    b.Navigation("ChildHealth");

                    b.Navigation("ParentHistory");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.ChildHealth", b =>
                {
                    b.Navigation("GpphCheckups");

                    b.Navigation("HeadCircumferenceCheckups");

                    b.Navigation("hearingPowerCheckups");

                    b.Navigation("KmpeCheckups");

                    b.Navigation("KpspCheckups");

                    b.Navigation("MchatCheckups");

                    b.Navigation("NutritionalStatusBbTbCheckups");

                    b.Navigation("NutritionalStatusImtUCheckups");

                    b.Navigation("NutritionalStatusIpTbCheckups");

                    b.Navigation("VisionCheckups");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.HearingPowerCheckup", b =>
                {
                    b.Navigation("HearingPowerDetails");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KpspCheckup", b =>
                {
                    b.Navigation("KpspDetails");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NakesUser", b =>
                {
                    b.Navigation("DataAnaks");

                    b.Navigation("Photos");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
