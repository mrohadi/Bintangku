// <auto-generated />
using System;
using Bintangku.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bintangku.WebApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    partial class ApplicationDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.DataAnak", b =>
                {
                    b.Property<int>("DataAnakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("JenisKelamin")
                        .HasColumnType("text");

                    b.Property<byte>("JumlahSaudara")
                        .HasColumnType("smallint");

                    b.Property<string>("Kontak")
                        .HasColumnType("text");

                    b.Property<int>("NIK")
                        .HasColumnType("integer");

                    b.Property<int>("NakesUserId")
                        .HasColumnType("integer");

                    b.Property<string>("NamaLengkap")
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalLahirAnak")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("DataAnakId");

                    b.HasIndex("NakesUserId");

                    b.ToTable("DataAnaks");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KesehatanAnak", b =>
                {
                    b.Property<int>("KesehatanAnakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("DataAnakId")
                        .HasColumnType("integer");

                    b.Property<int>("PemeriksaanBeratBadan")
                        .HasColumnType("integer");

                    b.Property<int>("PemeriksaanTinggiBadan")
                        .HasColumnType("integer");

                    b.HasKey("KesehatanAnakId");

                    b.HasIndex("DataAnakId")
                        .IsUnique();

                    b.ToTable("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NakesUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("NoStrTenagaKesehatan")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("TempatPelayanan")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanDayaDengar", b =>
                {
                    b.Property<int>("PemeriksaanDayaDengarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.HasKey("PemeriksaanDayaDengarId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanDayaDengars");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanDayaLihat", b =>
                {
                    b.Property<int>("PemeriksaanDayaLihatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<int>("MataKanan")
                        .HasColumnType("integer");

                    b.Property<int>("MataKiri")
                        .HasColumnType("integer");

                    b.HasKey("PemeriksaanDayaLihatId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanDayaLihats");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanGpph", b =>
                {
                    b.Property<int>("PemeriksaanGpphId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<byte>("Point")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question1")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question10")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question2")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question3")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question4")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question5")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question6")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question7")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question8")
                        .HasColumnType("smallint");

                    b.Property<byte>("Question9")
                        .HasColumnType("smallint");

                    b.HasKey("PemeriksaanGpphId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanKesehatanGPPH");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanKmpe", b =>
                {
                    b.Property<int>("PemeriksaanKmpeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<byte>("JumlahYa")
                        .HasColumnType("smallint");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<bool>("Question1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question10")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question11")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question12")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question13")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question14")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question3")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question4")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question5")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question6")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question7")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question8")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question9")
                        .HasColumnType("boolean");

                    b.HasKey("PemeriksaanKmpeId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanKesehatanKMPE");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanKpsp", b =>
                {
                    b.Property<int>("PemeriksaanKpspId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<int>("JumlahYa")
                        .HasColumnType("integer");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("Tindakan")
                        .HasColumnType("text");

                    b.HasKey("PemeriksaanKpspId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanKpsps");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanLingkarKepala", b =>
                {
                    b.Property<int>("PemeriksaanLingkarKepalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("Klasifikasi")
                        .HasColumnType("text");

                    b.Property<int>("Kurva")
                        .HasColumnType("integer");

                    b.Property<int>("LingkarKepala")
                        .HasColumnType("integer");

                    b.Property<string>("Tindakan")
                        .HasColumnType("text");

                    b.HasKey("PemeriksaanLingkarKepalaId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanLingkarKepalas");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanMchat", b =>
                {
                    b.Property<int>("PemeriksaanMchatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Interpretasi")
                        .HasColumnType("text");

                    b.Property<string>("Intervensi")
                        .HasColumnType("text");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<bool>("Question1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question10")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question11")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question12")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question13")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question14")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question15")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question16")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question17")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question18")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question19")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question20")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question21")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question22")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question23")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question3")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question4")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question5")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question6")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question7")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question8")
                        .HasColumnType("boolean");

                    b.Property<bool>("Question9")
                        .HasColumnType("boolean");

                    b.Property<int>("TotalCriticalQuestionNo")
                        .HasColumnType("integer");

                    b.Property<int>("TotalCriticalQuestionYes")
                        .HasColumnType("integer");

                    b.Property<int>("TotalQuestionNo")
                        .HasColumnType("integer");

                    b.Property<int>("TotalQuestionYes")
                        .HasColumnType("integer");

                    b.HasKey("PemeriksaanMchatId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanKesehatanM-CHAT");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanStatusGiziBbTb", b =>
                {
                    b.Property<int>("PemeriksaanStatusGiziBbTbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("BeratBadan")
                        .HasColumnType("integer");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusGizi")
                        .HasColumnType("text");

                    b.Property<string>("Tindakan")
                        .HasColumnType("text");

                    b.Property<int>("TinggiBadan")
                        .HasColumnType("integer");

                    b.Property<int>("ZCode")
                        .HasColumnType("integer");

                    b.HasKey("PemeriksaanStatusGiziBbTbId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanStatusGiziBbTbs");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanStatusGiziImtU", b =>
                {
                    b.Property<int>("PemeriksaanStatusGiziImtUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("BeratBadan")
                        .HasColumnType("integer");

                    b.Property<int>("IMT")
                        .HasColumnType("integer");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusGizi")
                        .HasColumnType("text");

                    b.Property<string>("Tindakan")
                        .HasColumnType("text");

                    b.Property<int>("TinggiBadan")
                        .HasColumnType("integer");

                    b.Property<int>("Umur")
                        .HasColumnType("integer");

                    b.Property<int>("ZCode")
                        .HasColumnType("integer");

                    b.HasKey("PemeriksaanStatusGiziImtUId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanStatusGiziImtUs");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanStatusGiziIpTb", b =>
                {
                    b.Property<int>("PemeriksaanStatusGiziIpTbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("IndeksPanjang")
                        .HasColumnType("integer");

                    b.Property<int>("KesehatanAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusGizi")
                        .HasColumnType("text");

                    b.Property<string>("Tindakan")
                        .HasColumnType("text");

                    b.Property<int>("TinggiBadan")
                        .HasColumnType("integer");

                    b.Property<int>("ZCode")
                        .HasColumnType("integer");

                    b.HasKey("PemeriksaanStatusGiziIpTbId");

                    b.HasIndex("KesehatanAnakId");

                    b.ToTable("PemeriksaanStatusGiziIpTbs");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.Property<int>("NakesUserId")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NakesUserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.RiwayatKelahiran", b =>
                {
                    b.Property<int>("RiwayatKelahiranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ApgarScore")
                        .HasColumnType("integer");

                    b.Property<byte>("BeratBadan")
                        .HasColumnType("smallint");

                    b.Property<int>("DataAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("KelahiranDibantuOleh")
                        .HasColumnType("text");

                    b.Property<string>("LainLain")
                        .HasColumnType("text");

                    b.Property<int>("PanjangLahir")
                        .HasColumnType("integer");

                    b.HasKey("RiwayatKelahiranId");

                    b.HasIndex("DataAnakId")
                        .IsUnique();

                    b.ToTable("RiwayatKelahiran");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.RiwayatOrangTua", b =>
                {
                    b.Property<int>("RiwayatOrangTuaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte>("AnggotaRumahTangga")
                        .HasColumnType("smallint");

                    b.Property<int>("DataAnakId")
                        .HasColumnType("integer");

                    b.Property<string>("NamaAyah")
                        .HasColumnType("text");

                    b.Property<string>("NamaIbu")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanAyah")
                        .HasColumnType("text");

                    b.Property<string>("PekerjaanIbu")
                        .HasColumnType("text");

                    b.Property<float>("PenghasilanOrangTua")
                        .HasColumnType("real");

                    b.Property<string>("TandaTanganPath")
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalLahirAyah")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalLahirIbu")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("RiwayatOrangTuaId");

                    b.HasIndex("DataAnakId")
                        .IsUnique();

                    b.ToTable("RiwayatOrangTua");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppUserRole", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.DataAnak", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", "NakesUser")
                        .WithMany("DataAnaks")
                        .HasForeignKey("NakesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NakesUser");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KesehatanAnak", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.DataAnak", "DataAnak")
                        .WithOne("KesehatanAnak")
                        .HasForeignKey("Bintangku.WebApi.Data.Entities.KesehatanAnak", "DataAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanDayaDengar", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanDayaDengars")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanDayaLihat", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanDayaLihats")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanGpph", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanGpphs")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanKmpe", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanKmpes")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanKpsp", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanKpsps")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanLingkarKepala", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanLingkarKepalas")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanMchat", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanMchats")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanStatusGiziBbTb", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanStatusGiziBbTbs")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanStatusGiziImtU", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanStatusGiziImtUs")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.PemeriksaanStatusGiziIpTb", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.KesehatanAnak", "KesehatanAnak")
                        .WithMany("PemeriksaanStatusGiziIpTbs")
                        .HasForeignKey("KesehatanAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KesehatanAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.Photo", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", "NakesUser")
                        .WithMany("Photos")
                        .HasForeignKey("NakesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NakesUser");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.RiwayatKelahiran", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.DataAnak", "DataAnak")
                        .WithOne("RiwayatKelahiran")
                        .HasForeignKey("Bintangku.WebApi.Data.Entities.RiwayatKelahiran", "DataAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataAnak");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.RiwayatOrangTua", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.DataAnak", "DataAnak")
                        .WithOne("RiwayatOrangTua")
                        .HasForeignKey("Bintangku.WebApi.Data.Entities.RiwayatOrangTua", "DataAnakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataAnak");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Bintangku.WebApi.Data.Entities.NakesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.DataAnak", b =>
                {
                    b.Navigation("KesehatanAnak");

                    b.Navigation("RiwayatKelahiran");

                    b.Navigation("RiwayatOrangTua");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.KesehatanAnak", b =>
                {
                    b.Navigation("PemeriksaanDayaDengars");

                    b.Navigation("PemeriksaanDayaLihats");

                    b.Navigation("PemeriksaanGpphs");

                    b.Navigation("PemeriksaanKmpes");

                    b.Navigation("PemeriksaanKpsps");

                    b.Navigation("PemeriksaanLingkarKepalas");

                    b.Navigation("PemeriksaanMchats");

                    b.Navigation("PemeriksaanStatusGiziBbTbs");

                    b.Navigation("PemeriksaanStatusGiziImtUs");

                    b.Navigation("PemeriksaanStatusGiziIpTbs");
                });

            modelBuilder.Entity("Bintangku.WebApi.Data.Entities.NakesUser", b =>
                {
                    b.Navigation("DataAnaks");

                    b.Navigation("Photos");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
